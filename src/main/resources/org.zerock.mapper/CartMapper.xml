<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.CartMapper">

    <insert id="insert">
        <selectKey keyProperty="oid" order="BEFORE" resultType="Integer">
            select ifnull(MAX(oid) + 1,1) from CART_TB
        </selectKey>
        insert into CART_TB (oid, quantity, reg_date, product_oid, user_email)
        values(#{oid}, #{quantity}, NOW(), #{productOid}, #{userEmail})
    </insert>

    <select id="readByUserEmail" resultType="org.zerock.dto.CartViewDTO">
        select a.oid, a.quantity, b.oid as product_oid, b.title as product_title, b.price,
               c.name as pub_name, d.path as rep_uri, e.name as author_name
        from CART_TB a,
             PRODUCT_TB b,
             PUB_TB c,
             IMAGE_PRODUCT_TB d,
             AUTHOR_TB e
        where (a.user_email = #{userEmail}) and (a.product_oid = b.oid) and (b.pub_oid = c.oid) and
            (b.oid = d.product_oid) and (d.image_list_oid = 2) and (b.author_oid = e.oid)
    </select>

    <select id="readByOid" resultType="org.zerock.dto.CartViewDTO">
        select a.oid, a.quantity, b.oid as product_oid, b.title as product_title, b.price,
               c.name as pub_name, d.path as rep_uri, e.name as author_name
        from CART_TB a,
             PRODUCT_TB b,
             PUB_TB c,
             IMAGE_PRODUCT_TB d,
             AUTHOR_TB e
        where (a.oid = #{oid}) and (a.product_oid = b.oid) and (b.pub_oid = c.oid) and
            (b.oid = d.product_oid) and (d.image_list_oid = 2) and (b.author_oid = e.oid)
    </select>

    <delete id="delete">
        delete from CART_TB where user_email = #{userEmail} and oid=#{cartOid}
    </delete>

    <update id="update">
        update CART_TB
        set quantity = #{quantity}
        where oid = #{cartOid}
    </update>


</mapper>