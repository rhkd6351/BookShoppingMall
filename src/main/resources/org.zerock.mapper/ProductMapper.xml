<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.ProductMapper">

    <insert id="insert">
        <selectKey keyProperty="oid" order="BEFORE" resultType= "Integer">
            select product_seq.nextval from dual
        </selectKey>
        insert into product_tb(oid, title, description, price, delivery_fee, reg_date, pub_oid, category_oid,
        sub_title, contents, author_oid)
        values (#{oid}, #{title}, #{description}, #{price}, #{deliveryFee}, sysdate, #{pubOid}, #{categoryOid},
        #{subTitle}, #{contents}, #{authorOid})
    </insert>

    <select id="readAccordingToPubOid" resultType="org.zerock.domain.ProductVO">
        select * from product_tb where pub_oid = #{pubOid}
    </select>

    <select id="read" resultType="org.zerock.domain.ProductVO">
        select * from product_tb where oid = #{oid}
    </select>

    <update id="update">
        update product_tb
        set title = #{title},
            description = #{description},
            price = #{price},
            delivery_fee = #{deliveryFee},
            pub_oid =  #{pubOid},
            category_oid = #{categoryOid},
            sub_title= #{subTitle},
            contents = #{contents},
            author_oid = #{authorOid}
        where oid = #{oid}
    </update>

    <select id="newBookLayer" resultType="org.zerock.domain.ProductVO">
        select a.oid, a.title, a.price, b.path as rep_uri, c.path as desc_uri, d.name as author_name
        from product_tb a ,
        image_product_tb b,
        image_product_tb c,
        author_tb d
        where (a.oid = b.product_oid AND b.image_list_oid = 2)
        and (a.oid = c.product_oid AND c.image_list_oid = 3)
        and (a.author_oid = d.oid)
        and (rownum &lt;= #{num})
        order by a.reg_date desc
    </select>

</mapper>